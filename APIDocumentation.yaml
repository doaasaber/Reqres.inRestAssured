openapi: 3.0.3
info:
  title: reqres.in API
  description: 'This is a sample of API documentation for reqres.in '
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://reqres.in/api
    description: Reqres API Server
tags:
  - name: user
    description: Operations about user
paths:
  /user/{userId}:
    put:
      tags:
        - user
      summary: Update an existing user
      description: Update an existing user by Id
      operationId: updateUser
      parameters:
        - name: userId
          in: path
          required: true
          description: ID of the user to update
          schema:
            type: integer
            format: int64
      requestBody:
        description: Update an existing user in the list
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Doaa
                job:
                  type: string
                  example: eng
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid ID supplied
        '404':
          description: User not found
        '422':
          description: Validation exception
    get:
      tags:
        - user
      summary: Finds users by ID
      operationId: findUserById
      parameters:
        - name: userId
          in: path
          description: Get user from list
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid status value
    delete:
      tags:
        - user
      summary: Delete a user
      description: Delete a user
      operationId: deleteUser
      parameters:
        - name: userId
          in: path
          description: User ID to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid user value
  /user:
    post:
      tags:
        - user
      summary: Create user
      operationId: createUser
      requestBody:
        description: Created user object
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Doaa
                job:
                  type: string
                  example: eng
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: John
        job:
          type: string
          example: Doctor


